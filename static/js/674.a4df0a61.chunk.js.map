{"version":3,"file":"static/js/674.a4df0a61.chunk.js","mappings":"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","sources":["components/Background/Background.styled.jsx","components/Background/Background.jsx","pages/Main/Main.styled.jsx","components/BalanceForm/BalanceForm.styled.jsx","components/NotifyBalance/NotifyBalance.styled.jsx","components/NotifyBalance/NotifyBalance.jsx","components/BalanceForm/BalanceForm.jsx","images/reports.svg","pages/Main/Main.jsx","redux/Transaction/transactionSelectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledBackground = styled.div`\n  position: absolute;\n  z-index: -1;\n  top: 56px;\n  margin: 0 auto;\n  width: 320px;\n  height: 296px;\n  background-color: #f5f6fb;\n  border-radius: 0 0 0 112px;\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n    height: 527px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 1280px;\n  }\n`;\n","import React from 'react';\nimport { StyledBackground } from './Background.styled';\n\nconst Background = () => {\n  return <StyledBackground />;\n};\n\nexport default Background;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport bgDesk from '../../images/BgDesktop_1.png';\nimport bgDesk2 from '../../images/BgDesktop_2.png';\nimport bgTabl from '../../images/BgTablet_1.png';\nimport bgTabl2 from '../../images/BgTablet_2.png';\n\nexport const StyledHomePage = styled.div`\n  padding: 46px 0px 0px 0px;\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n\n  @media screen and (min-width: 768px) {\n    padding: 40px 32px 60px 32px;\n    background-image: url(${bgTabl});\n    background-position: bottom 60px right 88px;\n    background-repeat: no-repeat;\n    background-size: 25%;\n\n    @media screen and (min-device-pixel-ratio: 2),\n      screen and (min-resolution: 192dpi),\n      (-webkit-min-device-pixel-ratio: 2),\n      screen and (min-resolution: 2dppx) {\n      background-image: url(${bgTabl2});\n    }\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding: 40px 91px 83px 91px;\n    background-image: url(${bgDesk});\n    background-position: bottom;\n    background-size: contain;\n\n    @media screen and (min-device-pixel-ratio: 2),\n      screen and (min-resolution: 192dpi),\n      (-webkit-min-device-pixel-ratio: 2),\n      screen and (min-resolution: 2dppx) {\n      background-image: url(${bgDesk2});\n    }\n  }\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  flex-direction: column-reverse;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: baseline;\n  }\n`;\n\nexport const Link = styled(NavLink)`\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 14px;\n\n  text-align: center;\n  letter-spacing: 0.04em;\n  text-decoration: none;\n  margin-bottom: 40px;\n  fill: #52555f;\n\n  color: rgba(82, 85, 95, 0.7);\n\n  transition: color 250ms linear;\n\n  :hover,\n  :focus {\n    color: #ff751d;\n  }\n  :hover .reportsIcon,\n  :focus .reportsIcon {\n    fill: #ff751d;\n  }\n  .reportsIcon {\n    margin-left: 20px;\n    width: 14px;\n    height: 14px;\n    fill: #52555f;\n    transition: fill 250ms linear;\n  }\n\n  @media screen and (min-width: 768px) {\n    text-align: right;\n    margin-bottom: 0;\n  }\n`;\n\nexport const ExspensesIncLink = styled(NavLink)`\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 12px;\n  line-height: 14px;\n  \n  display: flex;\n  align-items: center;\n  justify-content: center;\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n  text-decoration: none;\n\n  background: #f5f6fb;\n  color: #000000;\n  width: 159px;\n  height: 53px;\n\n  transition: color 250ms linear, background-color 250ms linear;\n\n  :hover,\n  :focus {\n    color: #ffffff;\n    background-color: #ff751d;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 140px;\n    height: 40px;\n    background: #fafbfd;\n    border-top-left-radius: 20px;\n    border-top-right-radius: 20px;\n\n    &.active {\n      color: #ff751d;\n      background-color: #fefefe;\n    }\n    :hover:not(.active),\n    :focus-visible:not(.active) {\n      color: #ff751d;\n      background: #fafbfd;\n    }\n  }\n`;\n\nexport const LinkBox = styled.div`\n  display: flex;\n\n  @media screen and (max-width: 767px) {\n    gap: 2px;\n    display: flex;\n    margin-top: auto;\n  }\n  \n  @media screen and (min-width: 768px) {\n    margin-top: 60px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    margin-top: 8px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const BalanceFormStyled = styled.form`\n  margin: 0 auto 50px;\n  padding: 0 20px;\n  display: flex;\n  flex-direction: column;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    flex-direction: row;\n    gap: 20px;\n    align-items: baseline;\n    margin: 0;\n  }\n  @media screen and (min-width: 1280px) {\n    margin: 0 auto;\n  }\n`;\n\nexport const BalanceFormLabel = styled.label`\n  color: rgba(82, 85, 95, 0.7);\n  margin-bottom: 8px;\n  font-size: 12px;\n  line-height: calc(14 / 12);\n  font-weight: 500;\n  letter-spacing: 0.02em;\n  text-align: center;\n`;\n\nexport const BalanceFormInput = styled.input`\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 12px;\n  line-height: 14px;\n  letter-spacing: 0.02em;\n\n  width: 140px;\n  padding: 12px 18px;\n  color: #52555f;\n  text-align: right;\n  border: 2px solid white;\n  border-radius: 22px 0 0 22px;\n  outline: none;\n  background-color: #f5f6fb;\n\n  transition: background-color 250s linear;\n\n  :focus {\n    background-color: #fff;\n  }\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n    transition: background-color 250s linear;\n  }\n\n  &::placeholder {\n    color: #000;\n    letter-spacing: 0.02em;\n    font-weight: 700;\n    font-size: 12px;\n    line-height: 1.17;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 125px;\n    padding: 12px 20px;\n    border-radius: 16px;\n    margin-right: 15px;\n  }\n`;\n\nexport const BalanceFormBtn = styled.button`\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 14px;\n  letter-spacing: 0.02em;\n  \n  width: 140px;\n  padding: 12px 18px;\n  color: rgba(82, 85, 95, 0.7);\n  text-align: left;\n  text-transform: uppercase;\n  border: 2px solid white;\n  border-left: none;\n  border-radius: 0 22px 22px 0;\n  outline: none;\n  background-color: #f5f6fb;\n  cursor: pointer;\n\n  transition: border-color 250ms linear, color 250ms linear,\n    background-color 250ms linear;\n\n  :hover,\n  :focus {\n    color: white;\n    background-color: #ff751d;\n    border-color: #ff751d;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 125px;\n    padding: 12px 6px;\n    border-radius: 16px;\n    text-align: center;\n    border-left: 2px solid white;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const NotifyBalanceContainer = styled.div`\n  position: absolute;\n  top: 250px;\n  left: 50%;\n  transform: translateX(-50%);\n\n  max-width: 280px;\n  max-height: 163px;\n  width: 100%;\n  background: linear-gradient(117.84deg, #1d346a 2.84%, #031634 67.28%);\n  box-shadow: 0px 10px 60px rgba(170, 178, 197, 0.2);\n  border-radius: 30px;\n  \n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n    display: none;\n  }\n\n  @media screen and (min-width: 1280px) {\n    max-width: 288px;\n    top: 160px;\n    left: 52%;\n  }\n\n  &:before {\n    content: '';\n    position: absolute;\n    width: 0;\n    height: 0;\n    top: -9%;\n    left: 20%;\n    border-left: 16px solid transparent;\n    border-right: 16px solid transparent;\n    border-bottom: 16px solid #1d346a;\n  }\n`;\n\nexport const NotifyBalanceTitle = styled.h2`\n  padding-top: 24px;\n  padding-left: 24px;\n  padding-right: 24px;\n\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.43;\n  margin-bottom: 20px;\n  color: #ffffff;\n\n  @media screen and (min-width: 768px) {\n    padding-left: 29px;\n    padding-right: 29px;\n  }\n`;\n\nexport const NotifyBalanceText = styled.p`\n  padding-bottom: 49px;\n  padding-left: 24px;\n  padding-right: 24px;\n\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.33;\n  color: #ffffff;\n\n  @media screen and (min-width: 768px) {\n    padding-left: 29px;\n    padding-right: 29px;\n  }\n`;\n","import React from 'react';\nimport {\n  NotifyBalanceContainer,\n  NotifyBalanceText,\n  NotifyBalanceTitle,\n} from './NotifyBalance.styled';\n\nexport default function NotifyBalance() {\n  return (\n    <NotifyBalanceContainer>\n      <NotifyBalanceTitle>\n        Hello! To get started, enter the current balance of your account!\n      </NotifyBalanceTitle>\n      <NotifyBalanceText>\n        You can't spend money until you have it\n      </NotifyBalanceText>\n    </NotifyBalanceContainer>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useState, useEffect } from 'react';\nimport {\n  BalanceFormStyled,\n  BalanceFormLabel,\n  BalanceFormInput,\n  BalanceFormBtn,\n} from './BalanceForm.styled';\nimport NotifyBalance from '../NotifyBalance/NotifyBalance';\nimport { InfoModal } from 'components/InfoModal/InfoModal';\nimport { handleUserBalance } from '../../redux/Auth/authOperations';\nimport { getBalance } from '../../redux/Transaction/transactionSelectors';\n\nexport default function BalanceForm() {\n  const [modalOpen, setModalOpen] = useState(false);\n  const stateBalance = useSelector(getBalance);\n  const [balance, setBalance] = useState('');\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setBalance(String(stateBalance));\n  }, [stateBalance]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    // console.log(e.target.elements);\n  };\n\n  const handleChange = ({ target: { value } }) => {\n    const numText = value.split('').slice(0, value.indexOf('.')).join('');\n    // console.log(value.split('').slice(0, value.indexOf('.')).join(''));\n    setBalance(numText);\n  };\n  // Handle update users balance\n  const handleClick = () => {\n    dispatch(handleUserBalance(Number(balance)));\n    setBalance('');\n  };\n  // Open modal window\n  const handleModalOpen = () => {\n    setModalOpen(true);\n  };\n  // Close modal window\n  const handleModalClose = () => {\n    setModalOpen(false);\n  };\n\n  return (\n    <>\n      <BalanceFormStyled onSubmit={handleSubmit}>\n        <BalanceFormLabel>Balance:</BalanceFormLabel>\n        <div>\n          {' '}\n          <BalanceFormInput\n            type=\"text\"\n            name=\"balance\"\n            title=\"Please, enter your balance\"\n            placeholder=\"00.00 UAH\"\n            pattern=\"[0-9, .UAH]*\"\n            required\n            onChange={handleChange}\n            // placeholder={`${balance}.00 UAH`}\n            value={`${balance}.00 UAH`} //как сделать с .UAH\n          />\n          <BalanceFormBtn type=\"submit\" onClick={handleModalOpen}>\n            Confirm\n          </BalanceFormBtn>\n        </div>\n        {!stateBalance && <NotifyBalance />}\n      </BalanceFormStyled>\n      {modalOpen && (\n        <InfoModal closeModal={handleModalClose} dispatch={handleClick}>\n          Are you sure?\n        </InfoModal>\n      )}\n    </>\n  );\n}\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgReports(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 14,\n    height: 14,\n    viewBox: \"0 0 14 14\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 4.2H3V14H0V4.2ZM5.6 0H8.4V14H5.6V0ZM11.2 8H14V14H11.2V8Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgReports);\nexport default __webpack_public_path__ + \"static/media/reports.567065b7eac1c98730d496987d5d688c.svg\";\nexport { ForwardRef as ReactComponent };","import { Outlet } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport {\n  StyledHomePage,\n  Wrap,\n  Link,\n  ExspensesIncLink,\n  LinkBox,\n} from './Main.styled';\nimport Background from '../../components/Background/Background';\nimport BalanceForm from '../../components/BalanceForm/BalanceForm';\nimport { useMediaRules } from '../../MediaRules/MediaRules';\nimport { ReactComponent as IconReports } from '../../images/reports.svg';\nimport { Loader } from 'components/Loader/Loader';\n\nexport default function Main() {\n  const { isMobile } = useMediaRules();\n\n  return (\n    <>\n      <Background />\n      <StyledHomePage>\n        <Wrap>\n          <BalanceForm />\n          <Link to=\"/reports\">\n            Reports\n            <IconReports className=\"reportsIcon\" />\n          </Link>\n        </Wrap>\n        {!isMobile && (\n          <>\n            <LinkBox>\n              <ExspensesIncLink to=\"expenses\">Expenses</ExspensesIncLink>\n              <ExspensesIncLink to=\"income\">Income</ExspensesIncLink>\n            </LinkBox>\n            <Suspense fallback={<Loader />}>\n              <Outlet />\n            </Suspense>\n          </>\n        )}\n        {isMobile && (\n          <>\n            <LinkBox>\n              <ExspensesIncLink to=\"/expenses\">Expenses</ExspensesIncLink>\n              <ExspensesIncLink to=\"/income\">Income</ExspensesIncLink>\n            </LinkBox>\n          </>\n        )}\n      </StyledHomePage>\n    </>\n  );\n}\n","//  --------------- INCOME -----------------\nexport const getIncomesTransactions = state =>\n  state.transactions.incomes.transactions;\nexport const getIncomesMonthStats = state => state.transactions.incomes.stats;\nexport const getIncomesCategories = state =>\n  state.transactions.incomes.categories;\n\n//  --------------- EXPENCE -----------------\nexport const getExpencesTransactions = state =>\n  state.transactions.expences.transactions;\nexport const getExpencesMonthStats = state => state.transactions.expences.stats;\nexport const getExpencesCategories = state =>\n  state.transactions.expences.categories;\n\n//  ------------- FOR REPORT --------------\n//  return an object with 2 entries\nexport const getExpencesReportData = state =>\n  state.transactions.transactionsByPeriod.expenses;\nexport const getIncomesReportData = state =>\n  state.transactions.transactionsByPeriod.incomes;\n\n//   ---------- BALANCE ---------------\nexport const getBalance = state => state.transactions.newBalance;\n\n// ------------- Additional -----------\nexport const getAllTransactions = state => state.transactions.allTransactions;\nexport const getError = state => state.transactions.error;\nexport const getIsLoading = state => state.transactions.isLoading;\n"],"names":["StyledBackground","styled","StyledHomePage","bgTabl","bgTabl2","bgDesk","bgDesk2","Wrap","Link","NavLink","ExspensesIncLink","LinkBox","BalanceFormStyled","BalanceFormLabel","BalanceFormInput","BalanceFormBtn","NotifyBalanceContainer","NotifyBalanceTitle","NotifyBalanceText","NotifyBalance","BalanceForm","useState","modalOpen","setModalOpen","stateBalance","useSelector","getBalance","balance","setBalance","dispatch","useDispatch","useEffect","String","onSubmit","e","preventDefault","type","name","title","placeholder","pattern","required","onChange","value","target","numText","split","slice","indexOf","join","onClick","InfoModal","closeModal","handleUserBalance","Number","_path","_excluded","_extends","Object","assign","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgReports","_ref","svgRef","titleId","props","width","height","viewBox","fill","xmlns","ref","id","d","ForwardRef","Main","isMobile","useMediaRules","Background","to","className","Suspense","fallback","Loader","getIncomesTransactions","state","transactions","incomes","getIncomesMonthStats","stats","getIncomesCategories","categories","getExpencesTransactions","expences","getExpencesMonthStats","getExpencesCategories","getExpencesReportData","transactionsByPeriod","expenses","getIncomesReportData","newBalance","getIsLoading","isLoading"],"sourceRoot":""}