{"version":3,"file":"static/js/871.f0a7034e.chunk.js","mappings":"0JAEaA,E,QAAmBC,GAAAA,IAAH,4V,SCK7B,EAJmB,WACjB,OAAO,SAACD,EAAD,GACR,C,mICmED,I,gBACA,EAAe,IAA0B,2D,6BCvE5BE,EAAaD,EAAAA,GAAAA,IAAH,4UAqBVE,GAPWF,EAAAA,GAAAA,EAAH,kHAODA,EAAAA,GAAAA,KAAH,sHAOJG,EAAaH,EAAAA,GAAAA,MAAH,2LAUVI,EAAaJ,EAAAA,GAAAA,MAAH,2MAWVK,EAAgBL,EAAAA,GAAAA,IAAH,wDAKbM,EAAWN,EAAAA,GAAAA,OAAH,0cAqBRO,EAAYP,EAAAA,GAAAA,OAAH,oO,SCoBtB,EAhFkB,WAChB,IAAMQ,GAAWC,EAAAA,EAAAA,MACXC,EAAUC,IAAAA,WACVC,EAAcD,IAAAA,WACpB,OACE,UAACV,EAAD,YACE,qEACA,SAACM,EAAD,CAAWM,KAAK,SAAhB,UACE,gBAAKC,IAAKC,EAAQC,IAAI,cAExB,sFACA,SAAC,KAAD,CACEC,cAAe,CAAEC,MAAO,GAAIC,SAAU,IACtCC,SAAU,SAAAC,GACR,IAAMC,EAAS,CAAC,EAQhB,OAPKD,EAAOH,MAGT,2CAA2CK,KAAKF,EAAOH,SAExDI,EAAOJ,MAAQ,yBAJfI,EAAOJ,MAAQ,WAMVI,CACR,EACDE,SAAU,SAAAH,GACRb,GAASiB,EAAAA,EAAAA,IAAMJ,GAChB,EAfH,SAiBG,gBACCA,EADD,EACCA,OACAC,EAFD,EAECA,OACAI,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,WACAC,EAND,EAMCA,aACAC,EAPD,EAOCA,aAPD,OAUC,UAAC5B,EAAD,CAAMsB,SAAUK,EAAhB,WACE,SAAC1B,EAAD,CAAY4B,QAASrB,EAArB,qBACA,SAACN,EAAD,CACES,KAAK,QACLmB,KAAK,QACLC,SAAUN,EACVO,OAAQN,EACRO,MAAOd,EAAOH,MACdkB,GAAI1B,IAELY,EAAOJ,OAASQ,EAAQR,OAASI,EAAOJ,OACzC,SAACf,EAAD,CAAY4B,QAASnB,EAArB,wBACA,SAACR,EAAD,CACES,KAAK,WACLmB,KAAK,WACLC,SAAUN,EACVO,OAAQN,EACRO,MAAOd,EAAOF,SACdiB,GAAIxB,IAELU,EAAOH,UAAYO,EAAQP,UAAYG,EAAOH,UAC/C,UAACd,EAAD,YACE,SAACC,EAAD,CAAUO,KAAK,SAASwB,SAAUP,EAAlC,SACG,SAASQ,iBAEZ,SAAChC,EAAD,CACEO,KAAK,SACLwB,SAAUP,EACVS,QAAS,WACP/B,GAASgC,EAAAA,EAAAA,IAAOnB,GACjB,EALH,SAOG,eAAeiB,qBA1CvB,MAkDR,EC/CD,I,EACA,EAAe,IAA0B,oE,uCC3C5BG,EAAiBzC,EAAAA,GAAAA,IAAH,+1BAUC0C,EAAgBC,EASdC,EAAiBC,GCpBhC,SAASC,IACtB,OACE,iCACE,SAACC,EAAA,EAAD,KACA,UAACN,EAAD,YACE,0BACE,gBAAK3B,IAAKkC,EAAMhC,IAAI,YAEtB,SAAC,EAAD,SAIP,C","sources":["components/Background/Background.styled.jsx","components/Background/Background.jsx","images/google.svg","components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","images/Kapu$ta_desktop.svg","pages/Register/Register.styled.jsx","pages/Register/Register.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledBackground = styled.div`\n  position: absolute;\n  z-index: -1;\n  top: 56px;\n  margin: 0 auto;\n  width: 320px;\n  height: 296px;\n  background-color: #f5f6fb;\n  border-radius: 0 0 0 112px;\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n    height: 527px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 1280px;\n  }\n`;\n","import React from 'react';\nimport { StyledBackground } from './Background.styled';\n\nconst Background = () => {\n  return <StyledBackground />;\n};\n\nexport default Background;\n","var _path, _g, _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgGoogle(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 82,\n    height: 20,\n    viewBox: \"0 0 82 20\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M35.5272 9.91406V13.7148C35.3859 13.9017 35.1649 14.1068 34.8641 14.3301C34.5679 14.5488 34.1736 14.738 33.6815 14.8975C33.1893 15.057 32.5763 15.1367 31.8426 15.1367C31.2182 15.1367 30.6463 15.0319 30.1268 14.8223C29.6072 14.6081 29.1583 14.2959 28.7801 13.8857C28.4064 13.4756 28.117 12.9766 27.9119 12.3887C27.7068 11.7962 27.6043 11.1217 27.6043 10.3652V9.6748C27.6043 8.92285 27.6977 8.25293 27.8846 7.66504C28.076 7.07259 28.3494 6.57129 28.7049 6.16113C29.0604 5.75098 29.4887 5.44108 29.9901 5.23145C30.4959 5.01725 31.0679 4.91016 31.7059 4.91016C32.5216 4.91016 33.1961 5.04688 33.7293 5.32031C34.2671 5.58919 34.6818 5.96289 34.9734 6.44141C35.2651 6.91992 35.4497 7.4668 35.5272 8.08203H33.8455C33.7908 7.73568 33.6837 7.42578 33.5242 7.15234C33.3693 6.87891 33.146 6.66471 32.8543 6.50977C32.5672 6.35026 32.1935 6.27051 31.7332 6.27051C31.3367 6.27051 30.9881 6.3457 30.6873 6.49609C30.3865 6.64648 30.1359 6.86751 29.9354 7.15918C29.7394 7.45085 29.5913 7.80632 29.491 8.22559C29.3908 8.64486 29.3406 9.12337 29.3406 9.66113V10.3652C29.3406 10.9121 29.3976 11.3975 29.5115 11.8213C29.63 12.2451 29.7986 12.6029 30.0174 12.8945C30.2407 13.1862 30.5119 13.4072 30.8309 13.5576C31.1499 13.7035 31.5099 13.7764 31.9109 13.7764C32.3029 13.7764 32.6242 13.7445 32.8748 13.6807C33.1255 13.6123 33.3237 13.5326 33.4695 13.4414C33.6199 13.3457 33.7361 13.2546 33.8182 13.168V11.1924H31.7469V9.91406H35.5272ZM37.229 11.3838V11.2266C37.229 10.6934 37.3065 10.1989 37.4615 9.74316C37.6164 9.28288 37.8397 8.88411 38.1314 8.54688C38.4276 8.20508 38.7876 7.94076 39.2115 7.75391C39.6398 7.5625 40.1229 7.4668 40.6607 7.4668C41.203 7.4668 41.6861 7.5625 42.1099 7.75391C42.5383 7.94076 42.9006 8.20508 43.1968 8.54688C43.493 8.88411 43.7186 9.28288 43.8736 9.74316C44.0285 10.1989 44.106 10.6934 44.106 11.2266V11.3838C44.106 11.917 44.0285 12.4115 43.8736 12.8672C43.7186 13.3229 43.493 13.7217 43.1968 14.0635C42.9006 14.4007 42.5406 14.665 42.1167 14.8564C41.6929 15.0433 41.2121 15.1367 40.6743 15.1367C40.132 15.1367 39.6467 15.0433 39.2183 14.8564C38.7945 14.665 38.4344 14.4007 38.1382 14.0635C37.842 13.7217 37.6164 13.3229 37.4615 12.8672C37.3065 12.4115 37.229 11.917 37.229 11.3838ZM38.8765 11.2266V11.3838C38.8765 11.7165 38.9107 12.0309 38.979 12.3271C39.0474 12.6234 39.1545 12.8831 39.3003 13.1064C39.4462 13.3298 39.633 13.5052 39.8609 13.6328C40.0887 13.7604 40.3599 13.8242 40.6743 13.8242C40.9797 13.8242 41.244 13.7604 41.4673 13.6328C41.6952 13.5052 41.882 13.3298 42.0279 13.1064C42.1737 12.8831 42.2808 12.6234 42.3492 12.3271C42.4221 12.0309 42.4585 11.7165 42.4585 11.3838V11.2266C42.4585 10.8984 42.4221 10.5885 42.3492 10.2969C42.2808 10.0007 42.1714 9.73861 42.021 9.51074C41.8752 9.28288 41.6883 9.10514 41.4605 8.97754C41.2372 8.84538 40.9706 8.7793 40.6607 8.7793C40.3508 8.7793 40.0819 8.84538 39.854 8.97754C39.6307 9.10514 39.4462 9.28288 39.3003 9.51074C39.1545 9.73861 39.0474 10.0007 38.979 10.2969C38.9107 10.5885 38.8765 10.8984 38.8765 11.2266ZM45.4524 11.3838V11.2266C45.4524 10.6934 45.5299 10.1989 45.6848 9.74316C45.8398 9.28288 46.0631 8.88411 46.3547 8.54688C46.651 8.20508 47.011 7.94076 47.4348 7.75391C47.8632 7.5625 48.3463 7.4668 48.884 7.4668C49.4264 7.4668 49.9094 7.5625 50.3333 7.75391C50.7616 7.94076 51.1239 8.20508 51.4202 8.54688C51.7164 8.88411 51.942 9.28288 52.0969 9.74316C52.2519 10.1989 52.3293 10.6934 52.3293 11.2266V11.3838C52.3293 11.917 52.2519 12.4115 52.0969 12.8672C51.942 13.3229 51.7164 13.7217 51.4202 14.0635C51.1239 14.4007 50.7639 14.665 50.3401 14.8564C49.9163 15.0433 49.4355 15.1367 48.8977 15.1367C48.3554 15.1367 47.87 15.0433 47.4417 14.8564C47.0178 14.665 46.6578 14.4007 46.3616 14.0635C46.0654 13.7217 45.8398 13.3229 45.6848 12.8672C45.5299 12.4115 45.4524 11.917 45.4524 11.3838ZM47.0999 11.2266V11.3838C47.0999 11.7165 47.134 12.0309 47.2024 12.3271C47.2708 12.6234 47.3779 12.8831 47.5237 13.1064C47.6695 13.3298 47.8564 13.5052 48.0842 13.6328C48.3121 13.7604 48.5833 13.8242 48.8977 13.8242C49.203 13.8242 49.4674 13.7604 49.6907 13.6328C49.9185 13.5052 50.1054 13.3298 50.2512 13.1064C50.3971 12.8831 50.5042 12.6234 50.5725 12.3271C50.6454 12.0309 50.6819 11.7165 50.6819 11.3838V11.2266C50.6819 10.8984 50.6454 10.5885 50.5725 10.2969C50.5042 10.0007 50.3948 9.73861 50.2444 9.51074C50.0986 9.28288 49.9117 9.10514 49.6838 8.97754C49.4605 8.84538 49.1939 8.7793 48.884 8.7793C48.5741 8.7793 48.3053 8.84538 48.0774 8.97754C47.8541 9.10514 47.6695 9.28288 47.5237 9.51074C47.3779 9.73861 47.2708 10.0007 47.2024 10.2969C47.134 10.5885 47.0999 10.8984 47.0999 11.2266ZM58.7275 7.60352H60.2246V14.7949C60.2246 15.4603 60.0833 16.0254 59.8008 16.4902C59.5182 16.9551 59.124 17.3083 58.6181 17.5498C58.1123 17.7959 57.5267 17.9189 56.8613 17.9189C56.5787 17.9189 56.2643 17.8779 55.9179 17.7959C55.5761 17.7139 55.2435 17.5817 54.9199 17.3994C54.6009 17.2217 54.3343 16.987 54.1201 16.6953L54.8926 15.7246C55.1569 16.0391 55.4485 16.2692 55.7676 16.415C56.0866 16.5609 56.4215 16.6338 56.7724 16.6338C57.1507 16.6338 57.472 16.5632 57.7363 16.4219C58.0052 16.2852 58.2125 16.0824 58.3584 15.8135C58.5042 15.5446 58.5771 15.2165 58.5771 14.8291V9.27832L58.7275 7.60352ZM53.7031 11.3838V11.2402C53.7031 10.6797 53.7715 10.1693 53.9082 9.70898C54.0449 9.24414 54.2409 8.84538 54.4961 8.5127C54.7513 8.17546 55.0612 7.91797 55.4258 7.74023C55.7903 7.55794 56.2028 7.4668 56.6631 7.4668C57.1416 7.4668 57.5495 7.55339 57.8867 7.72656C58.2285 7.89974 58.5133 8.14811 58.7412 8.47168C58.969 8.79069 59.1468 9.1735 59.2744 9.62012C59.4065 10.0622 59.5045 10.5544 59.5683 11.0967V11.5547C59.5091 12.0833 59.4088 12.5664 59.2676 13.0039C59.1263 13.4414 58.9394 13.8197 58.707 14.1387C58.4746 14.4577 58.1875 14.7038 57.8457 14.877C57.5084 15.0501 57.1097 15.1367 56.6494 15.1367C56.1982 15.1367 55.7903 15.0433 55.4258 14.8564C55.0657 14.6696 54.7558 14.4076 54.4961 14.0703C54.2409 13.7331 54.0449 13.3366 53.9082 12.8809C53.7715 12.4206 53.7031 11.9215 53.7031 11.3838ZM55.3506 11.2402V11.3838C55.3506 11.721 55.3825 12.0355 55.4463 12.3271C55.5146 12.6188 55.6172 12.8763 55.7539 13.0996C55.8952 13.3184 56.0729 13.4915 56.2871 13.6191C56.5058 13.7422 56.7633 13.8037 57.0595 13.8037C57.4469 13.8037 57.7636 13.7217 58.0097 13.5576C58.2604 13.3936 58.4518 13.1725 58.584 12.8945C58.7207 12.612 58.8164 12.2975 58.8711 11.9512V10.7139C58.8437 10.445 58.7868 10.1943 58.7002 9.96191C58.6181 9.72949 58.5065 9.52669 58.3652 9.35352C58.2239 9.17578 58.0462 9.03906 57.832 8.94336C57.6178 8.8431 57.3649 8.79297 57.0732 8.79297C56.777 8.79297 56.5195 8.85677 56.3008 8.98438C56.082 9.11198 55.902 9.28743 55.7607 9.51074C55.624 9.73405 55.5215 9.99382 55.4531 10.29C55.3847 10.5863 55.3506 10.903 55.3506 11.2402ZM63.9772 4.5V15H62.3229V4.5H63.9772ZM69.3227 15.1367C68.7758 15.1367 68.2813 15.0479 67.8393 14.8701C67.4018 14.6878 67.0281 14.4349 66.7182 14.1113C66.4128 13.7878 66.1781 13.4072 66.0141 12.9697C65.85 12.5322 65.768 12.0605 65.768 11.5547V11.2812C65.768 10.7025 65.8523 10.1784 66.0209 9.70898C66.1895 9.23958 66.4242 8.83854 66.725 8.50586C67.0258 8.16862 67.3813 7.91113 67.7914 7.7334C68.2016 7.55566 68.6459 7.4668 69.1244 7.4668C69.6531 7.4668 70.1156 7.55566 70.5121 7.7334C70.9086 7.91113 71.2367 8.16178 71.4965 8.48535C71.7608 8.80436 71.9568 9.1849 72.0844 9.62695C72.2166 10.069 72.2826 10.5566 72.2826 11.0898V11.7939H66.5678V10.6113H70.6557V10.4814C70.6466 10.1852 70.5873 9.90723 70.4779 9.64746C70.3731 9.3877 70.2113 9.17806 69.9926 9.01855C69.7738 8.85905 69.4822 8.7793 69.1176 8.7793C68.8442 8.7793 68.6003 8.83854 68.3861 8.95703C68.1765 9.07096 68.0011 9.2373 67.8598 9.45605C67.7185 9.6748 67.6091 9.93913 67.5317 10.249C67.4587 10.5544 67.4223 10.8984 67.4223 11.2812V11.5547C67.4223 11.8783 67.4656 12.179 67.5522 12.457C67.6433 12.7305 67.7755 12.9697 67.9486 13.1748C68.1218 13.3799 68.3315 13.5417 68.5776 13.6602C68.8236 13.7741 69.1039 13.8311 69.4184 13.8311C69.8149 13.8311 70.168 13.7513 70.4779 13.5918C70.7878 13.4323 71.0567 13.2067 71.2846 12.915L72.1527 13.7559C71.9932 13.9883 71.7859 14.2116 71.5307 14.4258C71.2755 14.6354 70.9633 14.8063 70.5942 14.9385C70.2296 15.0706 69.8057 15.1367 69.3227 15.1367Z\",\n    fill: \"black\"\n  })), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_1_179)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.1942 8.33402C17.2706 8.33402 17.3325 8.39888 17.3325 8.47889V10C17.3325 10.5693 17.282 11.126 17.1852 11.666C16.4367 15.8604 12.9111 19.0303 8.68524 18.9998C3.94348 18.9655 0.148642 14.9498 0.15914 9.97971C0.169572 5.01857 4.01003 1 8.74578 1C11.066 1 13.1711 1.96476 14.7167 3.53188C14.7725 3.58845 14.7739 3.68168 14.719 3.7392L12.6659 5.89115C12.613 5.94655 12.5276 5.948 12.4735 5.89396C11.5034 4.92614 10.1909 4.33197 8.74578 4.33197C5.76154 4.33197 3.35845 6.83284 3.33819 9.96066C3.31783 13.109 5.74678 15.668 8.74578 15.668C11.1791 15.668 13.2371 13.9832 13.9158 11.666H8.884C8.80766 11.666 8.74578 11.6011 8.74578 11.5211V8.47886C8.74578 8.39884 8.80766 8.33398 8.884 8.33398H17.1942V8.33402Z\",\n    fill: \"#2196F3\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.1939 8.33398H16.1573C16.2336 8.33398 16.2955 8.39885 16.2955 8.47886V9.99997C16.2955 10.5693 16.245 11.126 16.1483 11.666C15.4341 15.6675 12.1925 18.7365 8.22656 18.9837C8.37831 18.9931 8.53105 18.9986 8.68488 18.9997C12.9108 19.0303 16.4363 15.8604 17.1849 11.666C17.2816 11.126 17.3321 10.5693 17.3321 9.99997V8.47883C17.3321 8.39885 17.2702 8.33398 17.1939 8.33398V8.33398Z\",\n    fill: \"#1E88E5\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3.83357 7.62632L1.22577 5.65138C2.68879 2.87787 5.50804 1 8.74541 1C11.0656 1 13.1707 1.96476 14.7163 3.53188C14.7721 3.58845 14.7736 3.68168 14.7186 3.7392L12.6655 5.89115C12.6128 5.94645 12.5274 5.94817 12.4733 5.89424C11.5033 4.92625 10.1907 4.332 8.74541 4.332C6.56748 4.332 4.69016 5.68144 3.83357 7.62632V7.62632Z\",\n    fill: \"#F44336\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3.08075 7.05622L3.83359 7.62635C4.61545 5.85117 6.24786 4.57268 8.18288 4.36297C8.19743 4.36132 8.21142 4.35931 8.22625 4.35784C8.05595 4.34089 7.88338 4.33203 7.70883 4.33203C5.74138 4.33203 4.02673 5.41917 3.08075 7.05622V7.05622Z\",\n    fill: \"#E53935\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.6797 3.53188C13.7355 3.58845 13.7369 3.68168 13.682 3.73923L12.0156 5.4859C12.1752 5.61317 12.328 5.74929 12.4731 5.894C12.5272 5.94803 12.6126 5.94659 12.6655 5.89118L14.7186 3.73923C14.7735 3.68168 14.772 3.58848 14.7163 3.53188C13.1707 1.96476 11.0656 1 8.74538 1C8.57126 1 8.39852 1.00608 8.22699 1.0168C10.3415 1.14882 12.25 2.08232 13.6797 3.53188V3.53188Z\",\n    fill: \"#E53935\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15.0443 16.1164C13.4762 17.89 11.2344 19 8.74544 19C5.38369 19 2.47321 16.9751 1.06372 14.0252L3.72609 12.1129C4.52502 14.1965 6.47144 15.668 8.74544 15.668C10.1725 15.668 11.4704 15.0885 12.4365 14.1418L15.0443 16.1164Z\",\n    fill: \"#4CAF50\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3.72618 12.1129L2.9411 12.6768C3.85293 14.4572 5.64604 15.668 7.70888 15.668C7.88333 15.668 8.05577 15.659 8.226 15.6421C6.17831 15.4375 4.46349 14.0359 3.72618 12.1129Z\",\n    fill: \"#43A047\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8.74547 19.0001C11.2344 19.0001 13.4763 17.89 15.0443 16.1165L14.4056 15.6328C12.9332 17.5534 10.7245 18.8275 8.22845 18.9837C8.39952 18.9944 8.57185 19.0001 8.74547 19.0001Z\",\n    fill: \"#43A047\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3.33773 9.99998C3.33773 10.7468 3.47559 11.4599 3.72611 12.1129L1.06371 14.0252C0.48461 12.8141 0.158752 11.4469 0.158752 9.99998C0.158752 8.42273 0.545756 6.94034 1.22578 5.65137L3.83358 7.6263C3.51534 8.3481 3.33773 9.15251 3.33773 9.99998V9.99998Z\",\n    fill: \"#FFC107\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2.94102 12.6768L3.7261 12.1129C3.47558 11.4599 3.33772 10.7468 3.33772 9.99997C3.33772 9.15249 3.51532 8.34808 3.83357 7.62628L3.08072 7.05615C2.59185 7.90219 2.30812 8.89497 2.30121 9.96066C2.29484 10.9434 2.52718 11.8688 2.94102 12.6768V12.6768Z\",\n    fill: \"#FFB300\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_1_179\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 17.1733,\n    height: 18,\n    fill: \"white\",\n    transform: \"translate(0.158752 1)\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgGoogle);\nexport default __webpack_public_path__ + \"static/media/google.d64f9163b8f61487544747b482817a75.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\n\nexport const FormLayout = styled.div`\n  font-family: 'Roboto';\n  font-style: normal;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 425px;\n  height: 550px;\n  margin-left: 160px;\n  padding: 55px 85px;\n  border-radius: 30px;\n  background-color: #ffffff;\n  box-shadow: 0px 10px 60px rgba(170, 178, 197, 0.2);\n`;\nexport const FormText = styled.p`\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.16;\n  letter-spacing: 0.04em;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  justify-content: flex-start;\n`;\n\nexport const LoginLabel = styled.label`\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.16;\n  letter-spacing: 0.04em;\n  margin-bottom: 12px;\n`;\n\nexport const LoginInput = styled.input`\n  background-color: #f6f7fb;\n  border: none;\n  width: 100%;\n  height: 52px;\n  border-radius: 30px;\n  margin-bottom: 40px;\n  &:nth-child(2) {\n    margin-bottom: 32px;\n  }\n`;\nexport const LoginBtnBlock = styled.div`\n  display: flex;\n  gap: 15px;\n`;\n\nexport const LoginBtn = styled.button`\n  font-weight: 700;\n  font-size: 12px;\n  line-height: 14px;\n  letter-spacing: 0.02em;\n  width: 100%;\n  padding: 0;\n  margin: 0;\n  color: #52555f;\n  background-color: #f5f6fb;\n  height: 44px;\n  border: none;\n  border-radius: 16px;\n  box-shadow: 0px 10px 60px rgba(170, 178, 197, 0.2);\n  transition: color 250ms linear, background-color 250ms linear;\n  &:hover {\n    color: #ffffff;\n    background-color: #ff751d;\n  }\n`;\n\nexport const GoogleBtn = styled.button`\n  padding: 10px 19px;\n  margin: 0;\n  background-color: #f6f7fb;\n  border: none;\n  border-radius: 26px;\n  transition: background-color 250ms linear;\n  &:hover {\n    background-color: #ff751d;\n  }\n`;","import React from 'react';\nimport { Formik } from 'formik';\nimport shortid from 'shortid';\nimport { useDispatch,} from 'react-redux';\nimport google from '../../images/google.svg';\nimport { logIn, signUp } from '../../redux/Auth/authOperations';\nimport {\n  FormLayout,\n  Form,\n  LoginLabel,\n  LoginInput,\n  LoginBtn,\n  LoginBtnBlock,\n  GoogleBtn,\n} from './LoginForm.styled';\n\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const emailID = shortid.generate();\n  const passwordlID = shortid.generate();\n  return (\n    <FormLayout>\n      <p>You can log in with your Google Account:</p>\n      <GoogleBtn type=\"button\">\n        <img src={google} alt=\"google\" />\n      </GoogleBtn>\n      <p>Or log in using an email and password, after registering:</p>\n      <Formik\n        initialValues={{ email: '', password: '' }}\n        validate={values => {\n          const errors = {};\n          if (!values.email) {\n            errors.email = 'Required';\n          } else if (\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n          ) {\n            errors.email = 'Invalid email address';\n          }\n          return errors;\n        }}\n        onSubmit={values => {\n          dispatch(logIn(values));\n        }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n          /* and other goodies */\n        }) => (\n          <Form onSubmit={handleSubmit}>\n            <LoginLabel htmlFor={emailID}>Email:</LoginLabel>\n            <LoginInput\n              type=\"email\"\n              name=\"email\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.email}\n              id={emailID}\n            />\n            {errors.email && touched.email && errors.email}\n            <LoginLabel htmlFor={passwordlID}>Password:</LoginLabel>\n            <LoginInput\n              type=\"password\"\n              name=\"password\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.password}\n              id={passwordlID}\n            />\n            {errors.password && touched.password && errors.password}\n            <LoginBtnBlock>\n              <LoginBtn type=\"submit\" disabled={isSubmitting}>\n                {'Log in'.toUpperCase()}\n              </LoginBtn>\n              <LoginBtn\n                type=\"button\"\n                disabled={isSubmitting}\n                onClick={() => {\n                  dispatch(signUp(values));\n                }}\n              >\n                {'Registration'.toUpperCase()}\n              </LoginBtn>\n            </LoginBtnBlock>\n          </Form>\n        )}\n      </Formik>\n    </FormLayout>\n  );\n};\n\nexport default LoginForm;\n","var _path, _rect, _rect2, _path2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgKaputaDesktop(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 377,\n    height: 139,\n    viewBox: \"0 0 377 139\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M30.1318 68.0059L22.96 75.875V95H5.47852V22.4844H22.96V54.459L29.0361 45.2451L44.6748 22.4844H66.29L41.7861 54.5586L66.29 95H45.5713L30.1318 68.0059ZM100.307 95C99.709 93.9043 99.1777 92.2939 98.7129 90.1689C95.625 94.0537 91.3086 95.9961 85.7637 95.9961C80.6836 95.9961 76.3672 94.4688 72.8145 91.4141C69.2617 88.3262 67.4854 84.458 67.4854 79.8096C67.4854 73.9658 69.6436 69.5498 73.96 66.5615C78.2764 63.5732 84.5518 62.0791 92.7861 62.0791H97.9658V59.2402C97.9658 54.293 95.8242 51.8193 91.541 51.8193C87.5566 51.8193 85.5645 53.7783 85.5645 57.6963H68.7803C68.7803 52.4834 70.9883 48.25 75.4043 44.9961C79.8535 41.7422 85.5146 40.1152 92.3877 40.1152C99.2607 40.1152 104.689 41.792 108.674 45.1455C112.658 48.499 114.7 53.0977 114.8 58.9414V82.7979C114.866 87.7451 115.63 91.5303 117.091 94.1533V95H100.307ZM89.7979 84.043C91.8896 84.043 93.6162 83.5947 94.9775 82.6982C96.3721 81.8018 97.3682 80.7891 97.9658 79.6602V71.0439H93.085C87.2412 71.0439 84.3193 73.667 84.3193 78.9131C84.3193 80.4404 84.834 81.6855 85.8633 82.6484C86.8926 83.5781 88.2041 84.043 89.7979 84.043ZM174.167 68.4541C174.167 76.8213 172.274 83.5117 168.489 88.5254C164.737 93.5059 159.657 95.9961 153.249 95.9961C148.302 95.9961 144.234 94.1865 141.047 90.5674V115.719H124.263V41.1113H139.951L140.449 46.0918C143.67 42.1074 147.903 40.1152 153.149 40.1152C159.79 40.1152 164.953 42.5723 168.639 47.4863C172.324 52.3672 174.167 59.0908 174.167 67.6572V68.4541ZM157.383 67.4082C157.383 57.8457 154.594 53.0645 149.016 53.0645C145.031 53.0645 142.375 54.4922 141.047 57.3477V78.5645C142.508 81.5527 145.197 83.0469 149.115 83.0469C154.461 83.0469 157.217 78.4316 157.383 69.2012V67.4082ZM213.712 89.1729C210.159 93.7217 205.361 95.9961 199.318 95.9961C193.408 95.9961 188.926 94.2861 185.871 90.8662C182.85 87.4131 181.339 82.4658 181.339 76.0244V41.1113H198.123V76.124C198.123 80.7393 200.364 83.0469 204.847 83.0469C208.698 83.0469 211.438 81.6689 213.064 78.9131V41.1113H229.948V95H214.21L213.712 89.1729ZM267.401 79.8594C267.401 78.4316 266.654 77.2861 265.16 76.4229C263.666 75.5596 260.827 74.6631 256.644 73.7334C252.46 72.8037 249.007 71.5918 246.284 70.0977C243.562 68.5703 241.486 66.7275 240.059 64.5693C238.631 62.4111 237.917 59.9375 237.917 57.1484C237.917 52.2012 239.959 48.1338 244.043 44.9463C248.127 41.7256 253.473 40.1152 260.08 40.1152C267.186 40.1152 272.896 41.7256 277.213 44.9463C281.529 48.167 283.688 52.4004 283.688 57.6465H266.854C266.854 53.3301 264.579 51.1719 260.03 51.1719C258.271 51.1719 256.793 51.6699 255.598 52.666C254.402 53.6289 253.805 54.8408 253.805 56.3018C253.805 57.7959 254.535 59.0078 255.996 59.9375C257.457 60.8672 259.781 61.6309 262.969 62.2285C266.189 62.8262 269.012 63.54 271.436 64.3701C279.537 67.1592 283.588 72.1562 283.588 79.3613C283.588 84.2754 281.396 88.2764 277.014 91.3643C272.664 94.4521 267.02 95.9961 260.08 95.9961C255.465 95.9961 251.348 95.166 247.729 93.5059C244.109 91.8457 241.287 89.5879 239.262 86.7324C237.236 83.877 236.224 80.8721 236.224 77.7178H251.912C251.979 80.208 252.809 82.0342 254.402 83.1963C255.996 84.3252 258.038 84.8896 260.528 84.8896C262.819 84.8896 264.529 84.4248 265.658 83.4951C266.82 82.5654 267.401 81.3535 267.401 79.8594ZM311.03 27.7139V41.1113H319.896V52.7656H311.03V77.4189C311.03 79.4443 311.396 80.8555 312.126 81.6523C312.856 82.4492 314.301 82.8477 316.459 82.8477C318.119 82.8477 319.514 82.748 320.643 82.5488V94.5518C317.621 95.5146 314.467 95.9961 311.18 95.9961C305.402 95.9961 301.136 94.6348 298.38 91.9121C295.624 89.1895 294.246 85.0557 294.246 79.5107V52.7656H287.373V41.1113H294.246V27.7139H311.03ZM356.9 95C356.303 93.9043 355.771 92.2939 355.307 90.1689C352.219 94.0537 347.902 95.9961 342.357 95.9961C337.277 95.9961 332.961 94.4688 329.408 91.4141C325.855 88.3262 324.079 84.458 324.079 79.8096C324.079 73.9658 326.237 69.5498 330.554 66.5615C334.87 63.5732 341.146 62.0791 349.38 62.0791H354.56V59.2402C354.56 54.293 352.418 51.8193 348.135 51.8193C344.15 51.8193 342.158 53.7783 342.158 57.6963H325.374C325.374 52.4834 327.582 48.25 331.998 44.9961C336.447 41.7422 342.108 40.1152 348.981 40.1152C355.854 40.1152 361.283 41.792 365.268 45.1455C369.252 48.499 371.294 53.0977 371.394 58.9414V82.7979C371.46 87.7451 372.224 91.5303 373.685 94.1533V95H356.9ZM346.392 84.043C348.483 84.043 350.21 83.5947 351.571 82.6982C352.966 81.8018 353.962 80.7891 354.56 79.6602V71.0439H349.679C343.835 71.0439 340.913 73.667 340.913 78.9131C340.913 80.4404 341.428 81.6855 342.457 82.6484C343.486 83.5781 344.798 84.043 346.392 84.043Z\",\n    fill: \"black\"\n  })), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 257,\n    y: 28,\n    width: 8,\n    height: 13,\n    fill: \"black\"\n  })), _rect2 || (_rect2 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 257,\n    y: 95,\n    width: 8,\n    height: 13,\n    fill: \"black\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M78.9141 132.016C78.9141 131.573 78.7578 131.234 78.4453 131C78.1328 130.76 77.5703 130.51 76.7578 130.25C75.9453 129.984 75.3021 129.724 74.8281 129.469C73.5365 128.771 72.8906 127.831 72.8906 126.648C72.8906 126.034 73.0625 125.487 73.4062 125.008C73.7552 124.523 74.2526 124.146 74.8984 123.875C75.5495 123.604 76.2786 123.469 77.0859 123.469C77.8984 123.469 78.6224 123.617 79.2578 123.914C79.8932 124.206 80.3854 124.62 80.7344 125.156C81.0885 125.693 81.2656 126.302 81.2656 126.984H78.9219C78.9219 126.464 78.7578 126.06 78.4297 125.773C78.1016 125.482 77.6406 125.336 77.0469 125.336C76.474 125.336 76.0286 125.458 75.7109 125.703C75.3932 125.943 75.2344 126.26 75.2344 126.656C75.2344 127.026 75.4193 127.336 75.7891 127.586C76.1641 127.836 76.7135 128.07 77.4375 128.289C78.7708 128.69 79.7422 129.188 80.3516 129.781C80.9609 130.375 81.2656 131.115 81.2656 132C81.2656 132.984 80.8932 133.758 80.1484 134.32C79.4036 134.878 78.401 135.156 77.1406 135.156C76.2656 135.156 75.4688 134.997 74.75 134.68C74.0312 134.357 73.4818 133.917 73.1016 133.359C72.7266 132.802 72.5391 132.156 72.5391 131.422H74.8906C74.8906 132.677 75.6406 133.305 77.1406 133.305C77.6979 133.305 78.1328 133.193 78.4453 132.969C78.7578 132.74 78.9141 132.422 78.9141 132.016ZM88.8019 123.625L91.7238 131.875L94.63 123.625H97.7081V135H95.3566V131.891L95.5909 126.523L92.5206 135H90.9113L87.8488 126.531L88.0831 131.891V135H85.7394V123.625H88.8019ZM109.198 132.656H105.088L104.307 135H101.815L106.049 123.625H108.221L112.479 135H109.987L109.198 132.656ZM105.721 130.758H108.565L107.135 126.5L105.721 130.758ZM120.632 130.836H118.765V135H116.421V123.625H120.648C121.992 123.625 123.028 123.924 123.757 124.523C124.486 125.122 124.851 125.969 124.851 127.062C124.851 127.839 124.682 128.487 124.343 129.008C124.01 129.523 123.502 129.935 122.82 130.242L125.281 134.891V135H122.765L120.632 130.836ZM118.765 128.938H120.656C121.244 128.938 121.7 128.789 122.023 128.492C122.346 128.19 122.507 127.776 122.507 127.25C122.507 126.714 122.354 126.292 122.046 125.984C121.744 125.677 121.278 125.523 120.648 125.523H118.765V128.938ZM137.692 125.523H134.208V135H131.864V125.523H128.426V123.625H137.692V125.523ZM155.155 130.352H150.655V135H148.311V123.625H155.717V125.523H150.655V128.461H155.155V130.352ZM162.449 135H160.105V123.625H162.449V135ZM176.759 135H174.415L169.853 127.516V135H167.509V123.625H169.853L174.423 131.125V123.625H176.759V135ZM188.248 132.656H184.139L183.357 135H180.865L185.1 123.625H187.272L191.529 135H189.037L188.248 132.656ZM184.772 130.758H187.615L186.186 126.5L184.772 130.758ZM204.722 135H202.378L197.816 127.516V135H195.472V123.625H197.816L202.386 131.125V123.625H204.722V135ZM218.578 131.211C218.49 132.435 218.037 133.398 217.219 134.102C216.407 134.805 215.334 135.156 214 135.156C212.542 135.156 211.394 134.667 210.555 133.688C209.722 132.703 209.305 131.354 209.305 129.641V128.945C209.305 127.852 209.498 126.888 209.883 126.055C210.269 125.221 210.818 124.583 211.532 124.141C212.25 123.693 213.084 123.469 214.032 123.469C215.344 123.469 216.401 123.82 217.203 124.523C218.006 125.227 218.469 126.214 218.594 127.484H216.25C216.193 126.75 215.987 126.219 215.633 125.891C215.284 125.557 214.75 125.391 214.032 125.391C213.25 125.391 212.664 125.672 212.274 126.234C211.888 126.792 211.69 127.659 211.68 128.836V129.695C211.68 130.924 211.865 131.823 212.235 132.391C212.61 132.958 213.198 133.242 214 133.242C214.724 133.242 215.263 133.078 215.618 132.75C215.977 132.417 216.183 131.904 216.235 131.211H218.578ZM229.841 130.07H225.341V133.117H230.622V135H222.997V123.625H230.607V125.523H225.341V128.234H229.841V130.07Z\",\n    fill: \"#52555F\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgKaputaDesktop);\nexport default __webpack_public_path__ + \"static/media/Kapu$ta_desktop.558b646fc02fc6b4a209e561d24bd10e.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\nimport bgDesk from '../../images/BgDesktopReg_1.png';\nimport bgDesk2 from '../../images/BgDesktopReg_2.png';\nimport bgTabl from '../../images/BgTablet_1.png';\nimport bgTabl2 from '../../images/BgTablet_2.png';\n\nexport const RegisterLayout = styled.div`\n  display: flex;\n  justify-content: right;\n  align-items: center;\n  flex-grow: 1;\n  padding: 115px 90px 125px auto;\n\n  @media screen and (min-width: 768px) {\n    /* height: 1178px; */\n    padding: 40px 32px 60px 32px;\n    background-image: url(${bgDesk}), url(${bgTabl});\n    background-position: top 30px right 0px, bottom 55px left 100px;\n    background-repeat: no-repeat;\n    /* background-size: contain, auto; */\n\n    @media screen and (min-device-pixel-ratio: 2),\n      screen and (min-resolution: 192dpi),\n      (-webkit-min-device-pixel-ratio: 2),\n      screen and (min-resolution: 2dppx) {\n      background-image: url(${bgDesk2}), url(${bgTabl2});\n    }\n  }\n  @media screen and (min-width: 1280px) {\n    /* height: 795px; */\n    padding: 40px 91px 83px 91px;\n    background-position: top 30px right 0px, bottom 50px left 100px;\n  }\n`;\n","import Background from '../../components/Background/Background';\nimport LoginForm from '../../components/LoginForm/LoginForm';\nimport logo from '../../images/Kapu$ta_desktop.svg';\nimport { RegisterLayout } from './Register.styled';\n\nexport default function Register() {\n  return (\n    <>\n      <Background />\n      <RegisterLayout>\n        <div>\n          <img src={logo} alt=\"logo\" />\n        </div>\n        <LoginForm />\n      </RegisterLayout>\n    </>\n  );\n}\n"],"names":["StyledBackground","styled","FormLayout","Form","LoginLabel","LoginInput","LoginBtnBlock","LoginBtn","GoogleBtn","dispatch","useDispatch","emailID","shortid","passwordlID","type","src","google","alt","initialValues","email","password","validate","values","errors","test","onSubmit","logIn","touched","handleChange","handleBlur","handleSubmit","isSubmitting","htmlFor","name","onChange","onBlur","value","id","disabled","toUpperCase","onClick","signUp","RegisterLayout","bgDesk","bgTabl","bgDesk2","bgTabl2","Register","Background","logo"],"sourceRoot":""}